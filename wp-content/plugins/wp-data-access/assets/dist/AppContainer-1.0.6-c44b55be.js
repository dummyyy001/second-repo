import{r as o,_ as l,l as i,j as r}from"./main-1.0.6.js";import{A as m}from"./AppMetaData-1.0.6-4364a40e.js";import{v as p}from"./main-1.0.6-7aa8b30c.js";import"./ActionsApp-1.0.6-68143703.js";import"./Alert-1.0.6-728945e9.js";import"./index.esm-1.0.6-f58f385b.js";import"./iconBase-1.0.6-b8af29f5.js";import"./AlertTitle-1.0.6-986ff958.js";import"./Close-1.0.6-4b5eac8d.js";import"./useSlot-1.0.6-8db722c4.js";const s=o.lazy(()=>l(()=>import("./Alert-1.0.6-728945e9.js"),["./Alert-1.0.6-728945e9.js","./main-1.0.6.js","./index.esm-1.0.6-f58f385b.js","./iconBase-1.0.6-b8af29f5.js","./AlertTitle-1.0.6-986ff958.js","./Close-1.0.6-4b5eac8d.js","./useSlot-1.0.6-8db722c4.js"],import.meta.url)),_=({dataSource:t})=>{i.debug(t);let a;try{let e={};try{e=JSON.parse(t.replaceAll("'",'"'))}catch(n){return console.error("JSON parse error"),i.error(n),r.jsx(o.Suspense,{children:r.jsx(s,{severity:"error",message:"Invalid arguments - check console for more information",close:!1})})}if(e.id&&!isNaN(e.id))a=e.id;else return console.error("Invalid arguments"),r.jsx(o.Suspense,{children:r.jsx(s,{severity:"error",message:"Invalid arguments - check console for more information",close:!1})})}catch(e){return console.error("Invalid arguments",e),r.jsx(o.Suspense,{children:r.jsx(s,{severity:"error",message:"Invalid arguments - check console for more information",close:!1})})}return r.jsx(m,{appId:p(),appDbId:a})};export{_ as default};
